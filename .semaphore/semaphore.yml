version: v1.0
name: datetime_tz

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004


blocks:
  - name: "Check and test"
    dependencies: []

    task:
      # The commands from this block get run before a job in this block starts.
      prologue:
        commands:
          - "checkout"
          - "python3.10 -m pip install -e .[all]"

      jobs:
        - name: "Unit tests 3.9"
          commands:
            - "export PUBLISH_JUNIT_REPORT=true" # Export junit report from this job
            - "python3.9 -m pip install -e .[all]"
            - "python3.9 -m pytest tests"
            # Test without pydantic as well
            - "python3.9 -m pip uninstall pydantic -y"
            - "python3.9 -m pytest tests --ignore ./tests/pydantic_parsing_test.py"

        - name: "Unit tests 3.10"
          commands:
            - "export PUBLISH_JUNIT_REPORT=true" # Export junit report from this job
            - "python3.10 -m pytest tests"

        - name: "Unit tests 3.11"
          commands:
            # Semaphore does not have python3.11, so we run the tests using a Dockerfile
            - "sudo docker build -t src . && sudo docker run src"

        - name: "Typing"
          commands:
            - "export PUBLISH_JUNIT_REPORT=true" # Export junit report from this job
            - "python3.10 -m mypy ."

        - name: "Style"
          commands:
            - "python3.10 -m black --check ."
            - "python3.10 -m isort --check datetime_tz tests"

        - name: "Security"
          commands:
            - "export PUBLISH_JUNIT_REPORT=true" # Export junit report from this job
            - "python3.10 -m bandit -r -c pyproject.toml datetime_tz --format xml --output .junit_report.xml"

        - name: "Lint"
          commands:
            # pylint requires an `__init__.py` in all directories,
            # but we don"t need it for the distribution of the package.
            - "python3.10 -m pylint ./src/ ./tests/"

      epilogue:
        always:
          commands:
            # Publish the junit test report generated by pytest, if the job created a report
            - "! [[ -v PUBLISH_JUNIT_REPORT ]] || test-results publish .junit_report.xml"

  - name: "Build and ship"

    # Any time new commits are added to master branch we will try to publish to Pypi.
    # The version of the package will be taken from `pyproject.toml`. If there is a package
    # with that version known to Pypi already, nothing will happen.
    skip:
      when: "branch != 'master'"

    dependencies:
      - "Check and test"

    task:
      # To authenticate to Pypi we're using an api key stored in a secret in semaphore.
      # Twine expects the username to be "__token__" in these cases.
      env_vars:
        - name: TWINE_USERNAME
          value: "__token__"

      secrets:
        - name: datetime-tz-pypi-api-key
        - name: opsbot-github-key

      jobs:
        - name: "Build and ship it"
          commands:
            - "git config --global user.name 'OpsBot Prime'"
            - "git config --global user.email 'opsbot@channable.com'"
            - "chmod 0600 ~/.ssh/id_ed25519"
            - "ssh-add ~/.ssh/id_ed25519"

            - "checkout"
            - "bash .semaphore/publish-or-perish.sh"
